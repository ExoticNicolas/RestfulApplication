package com.SpringBootREST.service;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.SpringBootREST.data.vo.PersonVO;
import com.SpringBootREST.exceptions.NullEntityException;
import com.SpringBootREST.exceptions.ResourceNotFoundException;
import com.SpringBootREST.mapper.DozerMapper;
import com.SpringBootREST.model.Person;
import com.SpringBootREST.repositories.PersonRepository;

@Service
public class PersonService {

	@Autowired
	private PersonRepository personRepository;
	
	public PersonVO findById(Long id) {
		Person entity = personRepository.findById(id).orElseThrow(() -> new ResourceNotFoundException("Not Found"));
		PersonVO vo = DozerMapper.parseObject(entity, PersonVO.class);
		return vo;
	}
	
	public List<PersonVO> findAll(){
			List<Person> persons = personRepository.findAll();
			List<PersonVO> vos = DozerMapper.parseListObject(persons, PersonVO.class);
			return vos;
	}
	
	public PersonVO create (PersonVO personVO) {
		if(personVO == null) {
			throw new NullEntityException("NULL ENTITY");
		}
		Person entity = DozerMapper.parseObject(personVO, Person.class);
		PersonVO vo = DozerMapper.parseObject(personRepository.save(entity), PersonVO.class);
		return vo;
	}
	
	public void delete(Long id) {
		Person entity = personRepository.findById(id).orElseThrow(() -> new ResourceNotFoundException("Not Found"));
		personRepository.delete(entity);
	}
	
	public PersonVO uppdate(PersonVO personVO) {
		if(personVO == null || personVO.getId() == null) {
			throw new NullEntityException("NOT FOUND");
		}
	
		Person entity = personRepository.findById(personVO.getId()).orElseThrow(() -> new ResourceNotFoundException("Not Found"));
		entity.setFirstName(personVO.getFirstName());
		entity.setLastName(personVO.getLastName());
		entity.setAddress(personVO.getAddress());;
		entity.setGender(personVO.getGender());
		PersonVO vo = DozerMapper.parseObject(personRepository.save(entity), PersonVO.class);
		return vo;
	}
	
}
