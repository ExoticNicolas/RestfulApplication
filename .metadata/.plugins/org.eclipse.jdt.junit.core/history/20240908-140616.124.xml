<?xml version="1.0" encoding="UTF-8"?><testrun name="SwaggerIntegrationTest" project="SpringBootREST" tests="1" started="1" failures="0" errors="1" ignored="0">
  <testsuite name="com.SpringBootREST.integrationtests.swagger.SwaggerIntegrationTest" time="0.0" displayname="SwaggerIntegrationTest" uniqueid="[engine:junit-jupiter]/[class:com.SpringBootREST.integrationtests.swagger.SwaggerIntegrationTest]">
    <testcase name="shouldDisplaySwaggerUiPage" classname="com.SpringBootREST.integrationtests.swagger.SwaggerIntegrationTest" time="0.0" displayname="shouldDisplaySwaggerUiPage()" uniqueid="[engine:junit-jupiter]/[class:com.SpringBootREST.integrationtests.swagger.SwaggerIntegrationTest]/[method:shouldDisplaySwaggerUiPage()]">
      <error>java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@7bb25046 testClass = com.SpringBootREST.integrationtests.swagger.SwaggerIntegrationTest, locations = [], classes = [com.SpringBootREST.SpringBootRestApplication], contextInitializerClasses = [com.SpringBootREST.integrationtests.testcontainers.AbstractIntegrationTest.Initializer], activeProfiles = [], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@573906eb, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@68dc098b, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@5454d35e, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@73302995, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@3697186, org.springframework.boot.test.context.SpringBootTestAnnotation@cf899952], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]&#13;
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)&#13;
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)&#13;
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)&#13;
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)&#13;
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)&#13;
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:163)&#13;
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)&#13;
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)&#13;
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)&#13;
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)&#13;
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)&#13;
	at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.forEachRemaining(StreamSpliterators.java:310)&#13;
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:735)&#13;
	at java.base/java.util.stream.Streams$ConcatSpliterator.forEachRemaining(Streams.java:734)&#13;
	at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)&#13;
	at java.base/java.util.Optional.orElseGet(Optional.java:364)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)&#13;
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)&#13;
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Failed to initialize dependency 'flywayInitializer' of LoadTimeWeaverAware bean 'entityManagerFactory': Error creating bean with name 'flywayInitializer' defined in class path resource [org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration$FlywayConfiguration.class]: Migration V4__Populate_Table_Books.sql failed
---------------------------------------------
SQL State  : 42S02
Error Code : 1146
Message    : Table 'test.books' doesn't exist
Location   : db/migration/V4__Populate_Table_Books.sql (C:\Users\Pichau\Desktop\Projetos\SpringBootREST\target\classes\db\migration\V4__Populate_Table_Books.sql)
Line       : 2
Statement  : INSERT INTO books (author, launch_date, price, title) VALUES&#13;
	('Michael C. Feathers', '2017-11-29 13:50:05.878000', 49.00, 'Working effectively with legacy code'),&#13;
	('Ralph Johnson, Erich Gamma, John Vlissides e Richard Helm', '2017-11-29 15:15:13.636000', 45.00, 'Design Patterns'),&#13;
	('Robert C. Martin', '2009-01-10 00:00:00.000000', 77.00, 'Clean Code'),&#13;
	('Crockford', '2017-11-07 15:09:01.674000', 67.00, 'JavaScript'),&#13;
	('Steve McConnell', '2017-11-07 15:09:01.674000', 58.00, 'Code complete'),&#13;
	('Martin Fowler e Kent Beck', '2017-11-07 15:09:01.674000', 88.00, 'Refactoring'),&#13;
	('Eric Freeman, Elisabeth Freeman, Kathy Sierra, Bert Bates', '2017-11-07 15:09:01.674000', 110.00, 'Head First Design Patterns'),&#13;
	('Eric Evans', '2017-11-07 15:09:01.674000', 92.00, 'Domain Driven Design'),&#13;
	('Brian Goetz e Tim Peierls', '2017-11-07 15:09:01.674000', 80.00, 'Java Concurrency in Practice'),&#13;
	('Susan Cain', '2017-11-07 15:09:01.674000', 123.00, 'O poder dos quietos'),&#13;
	('Roger S. Pressman', '2017-11-07 15:09:01.674000', 56.00, 'Engenharia de Software: uma abordagem profissional'),&#13;
	('Viktor Mayer-Schonberger e Kenneth Kukier', '2017-11-07 15:09:01.674000', 54.00, 'Big Data: como extrair volume, variedade, velocidade e valor da avalanche de informação cotidiana'),&#13;
	('Richard Hunter e George Westerman', '2017-11-07 15:09:01.674000', 95.00, 'O verdadeiro valor de TI'),&#13;
	('Marc J. Schiller', '2017-11-07 15:09:01.674000', 45.00, 'Os 11 segredos de líderes de TI altamente influentes'),&#13;
	('Aguinaldo Aragon Fernandes e Vladimir Ferraz de Abreu', '2017-11-07 15:09:01.674000', 54.00, 'Implantando a governança de TI')
&#13;
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:326)&#13;
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)&#13;
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:954)&#13;
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)&#13;
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)&#13;
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)&#13;
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)&#13;
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)&#13;
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)&#13;
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)&#13;
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)&#13;
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1463)&#13;
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)&#13;
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)&#13;
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)&#13;
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)&#13;
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)&#13;
	... 17 more&#13;
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'flywayInitializer' defined in class path resource [org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration$FlywayConfiguration.class]: Migration V4__Populate_Table_Books.sql failed
---------------------------------------------
SQL State  : 42S02
Error Code : 1146
Message    : Table 'test.books' doesn't exist
Location   : db/migration/V4__Populate_Table_Books.sql (C:\Users\Pichau\Desktop\Projetos\SpringBootREST\target\classes\db\migration\V4__Populate_Table_Books.sql)
Line       : 2
Statement  : INSERT INTO books (author, launch_date, price, title) VALUES&#13;
	('Michael C. Feathers', '2017-11-29 13:50:05.878000', 49.00, 'Working effectively with legacy code'),&#13;
	('Ralph Johnson, Erich Gamma, John Vlissides e Richard Helm', '2017-11-29 15:15:13.636000', 45.00, 'Design Patterns'),&#13;
	('Robert C. Martin', '2009-01-10 00:00:00.000000', 77.00, 'Clean Code'),&#13;
	('Crockford', '2017-11-07 15:09:01.674000', 67.00, 'JavaScript'),&#13;
	('Steve McConnell', '2017-11-07 15:09:01.674000', 58.00, 'Code complete'),&#13;
	('Martin Fowler e Kent Beck', '2017-11-07 15:09:01.674000', 88.00, 'Refactoring'),&#13;
	('Eric Freeman, Elisabeth Freeman, Kathy Sierra, Bert Bates', '2017-11-07 15:09:01.674000', 110.00, 'Head First Design Patterns'),&#13;
	('Eric Evans', '2017-11-07 15:09:01.674000', 92.00, 'Domain Driven Design'),&#13;
	('Brian Goetz e Tim Peierls', '2017-11-07 15:09:01.674000', 80.00, 'Java Concurrency in Practice'),&#13;
	('Susan Cain', '2017-11-07 15:09:01.674000', 123.00, 'O poder dos quietos'),&#13;
	('Roger S. Pressman', '2017-11-07 15:09:01.674000', 56.00, 'Engenharia de Software: uma abordagem profissional'),&#13;
	('Viktor Mayer-Schonberger e Kenneth Kukier', '2017-11-07 15:09:01.674000', 54.00, 'Big Data: como extrair volume, variedade, velocidade e valor da avalanche de informação cotidiana'),&#13;
	('Richard Hunter e George Westerman', '2017-11-07 15:09:01.674000', 95.00, 'O verdadeiro valor de TI'),&#13;
	('Marc J. Schiller', '2017-11-07 15:09:01.674000', 45.00, 'Os 11 segredos de líderes de TI altamente influentes'),&#13;
	('Aguinaldo Aragon Fernandes e Vladimir Ferraz de Abreu', '2017-11-07 15:09:01.674000', 54.00, 'Implantando a governança de TI')
&#13;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1806)&#13;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)&#13;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)&#13;
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)&#13;
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)&#13;
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)&#13;
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)&#13;
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:313)&#13;
	... 33 more&#13;
Caused by: org.flywaydb.core.internal.command.DbMigrate$FlywayMigrateException: Migration V4__Populate_Table_Books.sql failed
---------------------------------------------
SQL State  : 42S02
Error Code : 1146
Message    : Table 'test.books' doesn't exist
Location   : db/migration/V4__Populate_Table_Books.sql (C:\Users\Pichau\Desktop\Projetos\SpringBootREST\target\classes\db\migration\V4__Populate_Table_Books.sql)
Line       : 2
Statement  : INSERT INTO books (author, launch_date, price, title) VALUES&#13;
	('Michael C. Feathers', '2017-11-29 13:50:05.878000', 49.00, 'Working effectively with legacy code'),&#13;
	('Ralph Johnson, Erich Gamma, John Vlissides e Richard Helm', '2017-11-29 15:15:13.636000', 45.00, 'Design Patterns'),&#13;
	('Robert C. Martin', '2009-01-10 00:00:00.000000', 77.00, 'Clean Code'),&#13;
	('Crockford', '2017-11-07 15:09:01.674000', 67.00, 'JavaScript'),&#13;
	('Steve McConnell', '2017-11-07 15:09:01.674000', 58.00, 'Code complete'),&#13;
	('Martin Fowler e Kent Beck', '2017-11-07 15:09:01.674000', 88.00, 'Refactoring'),&#13;
	('Eric Freeman, Elisabeth Freeman, Kathy Sierra, Bert Bates', '2017-11-07 15:09:01.674000', 110.00, 'Head First Design Patterns'),&#13;
	('Eric Evans', '2017-11-07 15:09:01.674000', 92.00, 'Domain Driven Design'),&#13;
	('Brian Goetz e Tim Peierls', '2017-11-07 15:09:01.674000', 80.00, 'Java Concurrency in Practice'),&#13;
	('Susan Cain', '2017-11-07 15:09:01.674000', 123.00, 'O poder dos quietos'),&#13;
	('Roger S. Pressman', '2017-11-07 15:09:01.674000', 56.00, 'Engenharia de Software: uma abordagem profissional'),&#13;
	('Viktor Mayer-Schonberger e Kenneth Kukier', '2017-11-07 15:09:01.674000', 54.00, 'Big Data: como extrair volume, variedade, velocidade e valor da avalanche de informação cotidiana'),&#13;
	('Richard Hunter e George Westerman', '2017-11-07 15:09:01.674000', 95.00, 'O verdadeiro valor de TI'),&#13;
	('Marc J. Schiller', '2017-11-07 15:09:01.674000', 45.00, 'Os 11 segredos de líderes de TI altamente influentes'),&#13;
	('Aguinaldo Aragon Fernandes e Vladimir Ferraz de Abreu', '2017-11-07 15:09:01.674000', 54.00, 'Implantando a governança de TI')
&#13;
	at org.flywaydb.core.internal.command.DbMigrate.doMigrateGroup(DbMigrate.java:382)&#13;
	at org.flywaydb.core.internal.command.DbMigrate.lambda$applyMigrations$1(DbMigrate.java:272)&#13;
	at org.flywaydb.core.internal.jdbc.TransactionalExecutionTemplate.execute(TransactionalExecutionTemplate.java:55)&#13;
	at org.flywaydb.core.internal.command.DbMigrate.applyMigrations(DbMigrate.java:271)&#13;
	at org.flywaydb.core.internal.command.DbMigrate.migrateGroup(DbMigrate.java:244)&#13;
	at org.flywaydb.core.internal.command.DbMigrate.lambda$migrateAll$0(DbMigrate.java:139)&#13;
	at org.flywaydb.database.mysql.MySQLNamedLockTemplate.execute(MySQLNamedLockTemplate.java:58)&#13;
	at org.flywaydb.database.mysql.MySQLConnection.lock(MySQLConnection.java:150)&#13;
	at org.flywaydb.core.internal.schemahistory.JdbcTableSchemaHistory.lock(JdbcTableSchemaHistory.java:145)&#13;
	at org.flywaydb.core.internal.command.DbMigrate.migrateAll(DbMigrate.java:139)&#13;
	at org.flywaydb.core.internal.command.DbMigrate.migrate(DbMigrate.java:97)&#13;
	at org.flywaydb.core.Flyway.lambda$migrate$0(Flyway.java:202)&#13;
	at org.flywaydb.core.FlywayExecutor.execute(FlywayExecutor.java:205)&#13;
	at org.flywaydb.core.Flyway.migrate(Flyway.java:147)&#13;
	at org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializer.afterPropertiesSet(FlywayMigrationInitializer.java:66)&#13;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1853)&#13;
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1802)&#13;
	... 40 more&#13;
Caused by: org.flywaydb.core.internal.sqlscript.FlywaySqlScriptException: Migration V4__Populate_Table_Books.sql failed
---------------------------------------------
SQL State  : 42S02
Error Code : 1146
Message    : Table 'test.books' doesn't exist
Location   : db/migration/V4__Populate_Table_Books.sql (C:\Users\Pichau\Desktop\Projetos\SpringBootREST\target\classes\db\migration\V4__Populate_Table_Books.sql)
Line       : 2
Statement  : INSERT INTO books (author, launch_date, price, title) VALUES&#13;
	('Michael C. Feathers', '2017-11-29 13:50:05.878000', 49.00, 'Working effectively with legacy code'),&#13;
	('Ralph Johnson, Erich Gamma, John Vlissides e Richard Helm', '2017-11-29 15:15:13.636000', 45.00, 'Design Patterns'),&#13;
	('Robert C. Martin', '2009-01-10 00:00:00.000000', 77.00, 'Clean Code'),&#13;
	('Crockford', '2017-11-07 15:09:01.674000', 67.00, 'JavaScript'),&#13;
	('Steve McConnell', '2017-11-07 15:09:01.674000', 58.00, 'Code complete'),&#13;
	('Martin Fowler e Kent Beck', '2017-11-07 15:09:01.674000', 88.00, 'Refactoring'),&#13;
	('Eric Freeman, Elisabeth Freeman, Kathy Sierra, Bert Bates', '2017-11-07 15:09:01.674000', 110.00, 'Head First Design Patterns'),&#13;
	('Eric Evans', '2017-11-07 15:09:01.674000', 92.00, 'Domain Driven Design'),&#13;
	('Brian Goetz e Tim Peierls', '2017-11-07 15:09:01.674000', 80.00, 'Java Concurrency in Practice'),&#13;
	('Susan Cain', '2017-11-07 15:09:01.674000', 123.00, 'O poder dos quietos'),&#13;
	('Roger S. Pressman', '2017-11-07 15:09:01.674000', 56.00, 'Engenharia de Software: uma abordagem profissional'),&#13;
	('Viktor Mayer-Schonberger e Kenneth Kukier', '2017-11-07 15:09:01.674000', 54.00, 'Big Data: como extrair volume, variedade, velocidade e valor da avalanche de informação cotidiana'),&#13;
	('Richard Hunter e George Westerman', '2017-11-07 15:09:01.674000', 95.00, 'O verdadeiro valor de TI'),&#13;
	('Marc J. Schiller', '2017-11-07 15:09:01.674000', 45.00, 'Os 11 segredos de líderes de TI altamente influentes'),&#13;
	('Aguinaldo Aragon Fernandes e Vladimir Ferraz de Abreu', '2017-11-07 15:09:01.674000', 54.00, 'Implantando a governança de TI')
&#13;
	at org.flywaydb.core.internal.sqlscript.DefaultSqlScriptExecutor.handleException(DefaultSqlScriptExecutor.java:252)&#13;
	at org.flywaydb.core.internal.sqlscript.DefaultSqlScriptExecutor.executeStatement(DefaultSqlScriptExecutor.java:214)&#13;
	at org.flywaydb.core.internal.sqlscript.DefaultSqlScriptExecutor.execute(DefaultSqlScriptExecutor.java:133)&#13;
	at org.flywaydb.core.internal.resolver.sql.SqlMigrationExecutor.executeOnce(SqlMigrationExecutor.java:65)&#13;
	at org.flywaydb.core.internal.resolver.sql.SqlMigrationExecutor.lambda$execute$0(SqlMigrationExecutor.java:57)&#13;
	at org.flywaydb.core.internal.database.DefaultExecutionStrategy.execute(DefaultExecutionStrategy.java:27)&#13;
	at org.flywaydb.core.internal.resolver.sql.SqlMigrationExecutor.execute(SqlMigrationExecutor.java:56)&#13;
	at org.flywaydb.core.internal.command.DbMigrate.doMigrateGroup(DbMigrate.java:374)&#13;
	... 56 more&#13;
Caused by: java.sql.SQLSyntaxErrorException: Table 'test.books' doesn't exist&#13;
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)&#13;
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)&#13;
	at com.mysql.cj.jdbc.StatementImpl.executeInternal(StatementImpl.java:770)&#13;
	at com.mysql.cj.jdbc.StatementImpl.execute(StatementImpl.java:653)&#13;
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)&#13;
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)&#13;
	at org.flywaydb.core.internal.jdbc.JdbcTemplate.executeStatement(JdbcTemplate.java:210)&#13;
	at org.flywaydb.core.internal.sqlscript.ParsedSqlStatement.execute(ParsedSqlStatement.java:89)&#13;
	at org.flywaydb.core.internal.sqlscript.DefaultSqlScriptExecutor.executeStatement(DefaultSqlScriptExecutor.java:206)&#13;
	... 62 more&#13;
&#13;
</error>
    </testcase>
  </testsuite>
</testrun>
